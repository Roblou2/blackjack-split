**when an ace hand is split, need to make it so only 1 card can be drawn**
**bug with split hand: when hand is reached, and face card and ace are the hand, 
need to make sure it is calculated 
as a blackjack and move onto next hand - change in splitCalcTotal**

**may need to setGameState in new gamePlay() function and maybe in player object**




****Where am I up to?

can now split so that up to 4 hands are on the table
split testing shows it works at all activePlayer values
now must modify hit, double down and stay functions so that
they target the correct hand via activePlayer

hit function targets hands correctly
and game moves from hand to hand correctly when bust 

13/9: Call gamePlay where needed.
**UI: must not show 2nd card in split hand until it's that hand's turn**

18/9: upon game start, it checks for a split.
Now check for a split when:
 1. after each time split button is clicked
2. whenever activePlayer changes
Above has been added to split.js and game.js
if players length is 4, set split button display to none in split.js

When the split button is clicked, at the end of the function, it checks for a split again 
via splitCheck()

20/9: Logic added to game.js under setActivePlayer for when split hand is pair of aces
Now need to test

****

set activePlayer to 0 (for index tracking in array of players)

At game start, create player and put into players array. 

Immediately call a fucntion which checks
for a split on the player created at game start
(add as a method in player logic)

If there is no split available, let calcTotal run as normal

For split hands, firstly, 2 new hands players need to be created 
(with split hands), 
pushed to players array and splitCalcTotal called. Update UI.

New duplictate wager is made for the extra hand.

The new route first checks for another possible split and creates new players
again if another split is possible and is activated. New players are 
pushed to array and UI updated.

new calcTotal route is run on players[activePlayer],
totals the hand, and checks for a blackjack.
If there is a blackjack, the hand stay function is activated, which
needs to have logic added that moves onto next hand to repeat the process.
This can be done via the players.length array and activePlayer var.

If there's no blackjack, the hit, stay and double down buttons
need to be activated. The following needs implementing for 
the functions of those buttons:

	hit function: 
if players.length == 1
--> hit function targets players[0] and normal calcTotal method is called

if players.length > 1 
the function needs to make the hit function target players[activePlayer]
if players busts, activePlayer++ - which allows the hit function
to target next player upon click.

If player hits, new calcTotal route needs to be called to check total.
Hand plays until player clicks stay

	stay function:

if players.length > 1 && activePlayer <= players.length -1
activePlayer++ 
stay() called again to check activePlayer value
Now the hit button can target the next player in the array

if players.length > 1 && activePlayer >= players.length -1
--> new gamePlay() function is called which checks comp total against
each hand


	double down function:

if players.length == 1
-->hit and double down function is called in usual fashion 

if players.length > 1
--> route hit function to follow as above for split hands

split gameplay () is then called
all buttons disabled
activePlayer set back to 0
it checks each hand against comp total and pays out accordingly
it will need to increment activePlayer to check totals until all
have been checked.

show final outcomes UI

splitCalcTotal function:



